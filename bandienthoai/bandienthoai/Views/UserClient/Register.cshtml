@model bandienthoai.Models.RegisterModel

@{
    ViewBag.Title = "Đăng ký";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section js{
    <script>

        var user = {
            unit: function () {
                user.loadProvince();
                user.regEvents();
            },
            regEvents: function () {
                $("#Province").off('change').on('change', function () {
                    var id = parseInt($(this).val());
                    if (id != '') {
                        user.loadDistrict(id)
                    }
                    else {
                        $('#District').html('');
                    }
                });
            },
            loadProvince: function () {
           
                $.ajax({
                    url: '/UserClient/LoadProvince',
                    type: "POST",
                    dataType: "json",
                    success: function (res) {
                        if (res.status == true) {
                            var html = '<option value="">--Chọn Tỉnh/ Thành--</option>';
                            var data = res.data;
                            $.each(data, function (i, item) {
                                html += '<option value="' + item.ID+'">'+item.Name+'</option>'
                            });
                            $("#Province").html(html);
                        }
                    }
                });
            },
            loadDistrict: function (id) {

                $.ajax({
                    url: '/UserClient/LoadDistrict',
                    type: "POST",
                    dataType: "json",
                    data: { ProvinceID: id },
                    success: function (res) {
                        if (res.status == true) {
                            var html = '<option value="">--Chọn Quận/Huyện--</option>';
                            var data = res.data;
                            $.each(data, function (i, item) {
                                html += '<option value="' + item.ID + '">' + item.Name + '</option>'
                            });
                            $("#District").html(html);
                        }
                    }
                });
            }
        }
        user.unit();
    </script>
    }
<div class="content">




    @using (Html.BeginForm("Register", "UserClient", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Đăng ký thành viên</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (ViewBag.Success != null)
        {
            <div class="alert alert-success" role="alert">
                Đăng ký thành công!
            </div>
        }
        <div class="form-group row">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group row">
            @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Province", new SelectList(new string[] { }),new { htmlAttributes = new { @class = "form-control",@id="ddlProvince" }, @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("District", new SelectList(new string[] { }), new { htmlAttributes = new { @class = "form-control", @id = "ddlDistrict" }, @class = "form-control" })
                @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-offset-2">
                <input type="submit" value="Đăng ký" class="btn btn-success" />
            </div>
        </div>
    </div>
    }


</div>